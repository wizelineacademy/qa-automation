{
	"info": {
		"_postman_id": "6139e16b-2c25-4d40-b104-849f01b28cfa",
		"name": "Wizeline .-  Certification",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Get All Projects",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "df0e2ca4-33b4-48f2-918c-8ddf203899a6",
						"type": "text/javascript",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{token}}"
					}
				],
				"body": {},
				"url": {
					"raw": "{{BaseURL}}/API/v8/projects",
					"host": [
						"{{BaseURL}}"
					],
					"path": [
						"API",
						"v8",
						"projects"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create a New Project",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "abf6db64-2140-4ed9-8234-7059be7ea451",
						"type": "text/javascript",
						"exec": [
							"eval(globals.postmanBDD);",
							"",
							"pm.environment.set(\"projectID\", response.body.id);",
							"pm.environment.set(\"projectName\", response.body.name);",
							"",
							"describe(\"Suite test 1#\", () => {",
							"    ",
							"    it(\"Validate Name\",() => {",
							"        expect(pm.environment.get(\"projectName\")).to.equals(\"Movch\");",
							"    });",
							"    ",
							"    it(\"Status Response should be 200\", () => {",
							"        expect(response.status).to.equals(200)",
							"    });",
							"    ",
							"    it('should return a JSON response', () => {",
							"        response.should.be.json;",
							"    });",
							"    ",
							"//*/*/*/*/*/*/*/*//*/*/",
							"});",
							""
						]
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{token}}"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"name\": \"Movch\"\n}"
				},
				"url": {
					"raw": "{{BaseURL}}/API/v8/projects",
					"host": [
						"{{BaseURL}}"
					],
					"path": [
						"API",
						"v8",
						"projects"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get a project",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "840f9d89-a13f-400f-809f-0ecc236864a5",
						"type": "text/javascript",
						"exec": [
							"eval(globals.postmanBDD);",
							"",
							"describe(\"Create a New Project\",()=>{",
							"    ",
							"    it ('Should match the expected schema', () => {",
							"        response.body.should.have.schema({",
							"        \"type\": \"object\",",
							"        \"required\":[",
							"            \"id\",",
							"            \"name\",",
							"            \"order\",",
							"            \"indent\",",
							"            \"comment_count\"",
							"            ],",
							"            \"properties\":",
							"            {",
							"                \"id\":{",
							"                    \"type\": \"number\"",
							"                },",
							"                \"name\":{",
							"                    \"type\": \"string\"",
							"                },",
							"                \"order\":{",
							"                    \"type\": \"number\"",
							"                },",
							"                \"indent\":{",
							"                    \"type\": \"number\"",
							"                },",
							"                \"comment_count\":{",
							"                    \"type\": \"number\"",
							"                }                    ",
							"            }",
							"        })",
							"    })",
							"})"
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{token}}"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {},
				"url": {
					"raw": "{{BaseURL}}/API/v8/projects/{{projectID}}",
					"host": [
						"{{BaseURL}}"
					],
					"path": [
						"API",
						"v8",
						"projects",
						"{{projectID}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update a Project",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "52265eb1-020f-471e-a3ad-a745f28e7b02",
						"type": "text/javascript",
						"exec": [
							"eval(globals.postmanBDD);",
							"",
							"pm.environment.set(\"projectID\", response.body.id);",
							"pm.environment.set(\"projectName\", response.body.name);",
							"",
							"describe(\"Suite test 1#\", () => {",
							"    ",
							"    it(\"Status Response should be 204\", () => {",
							"        expect(response.status).to.equals(204)",
							"    });",
							"    ",
							"    it('should return a JSON response', () => {",
							"        response.should.not.be.json;",
							"    });",
							"    ",
							"//*/*/*/*/*/*/*/*//*/*/",
							"});",
							""
						]
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{token}}"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"name\": \"Movies to review\"\n}"
				},
				"url": {
					"raw": "{{BaseURL}}/API/v8/projects/{{projectID}}",
					"host": [
						"{{BaseURL}}"
					],
					"path": [
						"API",
						"v8",
						"projects",
						"{{projectID}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete a project",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "34989190-ecd4-4a07-b3bf-64b01aec0f71",
						"type": "text/javascript",
						"exec": [
							"pm.test(\"Response time is less than 2000ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(2000);",
							"});",
							""
						]
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{token}}"
					}
				],
				"body": {},
				"url": {
					"raw": "{{BaseURL}}/API/v8/projects/{{projectID}}",
					"host": [
						"{{BaseURL}}"
					],
					"path": [
						"API",
						"v8",
						"projects",
						"{{projectID}}"
					]
				}
			},
			"response": []
		}
	]
}